#q <- q + guides(colour = guide_legend(override.aes = list(size=30),reverse=TRUE))
#q <- q + labs(title=paste(proper(j)," estimates of new daily cases corrected for underreporting as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,10)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ylabs)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
###################################
new.dayx <- labeled.data
for(j in names(results.models)){
ybreaks <- c(100,200,500,1000,2000,5000,10000,20000)
ylabs <- paste(ybreaks/1000,"K",sep="")
xbreaks <- seq(-28*5,28*2,28)
#text <- collapsed[nrow(collapsed),]
new.dayx[[j]]$cdc25p.ETU.l95[new.dayx[[j]]$cdc25p.ETU.l95<100] <- 100
new.dayx[[j]]$cdc45p.reduced.l95[new.dayx[[j]]$cdc45p.reduced.l95<100] <- 100
q <- ggplot(new.dayx[[j]][new.dayx[[j]]$label=="Historical"|new.dayx[[j]]$label=="Projection",],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=3,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=3,lwd=2)
q <- q + geom_ribbon(aes(ymin=log2(cdc25p.ETU.l95),ymax=log2(cdc25p.ETU.u95),fill=label),
alpha=0.4)
q <- q + geom_line(aes(y=log2(cdc25p.ETU),col=label,lty="25% in ETC"),lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cdc45p.reduced.l95),ymax=log2(cdc45p.reduced.u95),fill=label),
alpha=0.4)
#q <- q + geom_ribbon(aes(ymin=log2(cdc45p.reduced.l95),ymax=log2(cdc45p.reduced.u95),fill="red"),
#                    alpha=0.4)
q <- q + geom_line(aes(y=log2(cdc45p.reduced),col=label,lty="45% in reduced\ntransmission"),lwd=3)
q <- q + scale_linetype_manual("\nCDC targets",values=c("25% in ETC"=1,"45% in reduced\ntransmission"=2),labels=c("25% in ETC","45% in reduced\ntransmission"))
q <- q + scale_colour_brewer("",palette="Set1")
q <- q + scale_fill_brewer("",palette="Set1")
q <- q + guides(colour = guide_legend(override.aes = list(size=30),reverse=FALSE))
q <- q + guides(linetype = guide_legend(reverse=TRUE))
q <- q + guides(fill=FALSE)
#q <- q + labs(title=paste(proper(j)," estimates of cases needing treatment to reach CDC 70% goals as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks,lim=c(-56,56))
q <- format_plot(q,6,10)
q <- q + scale_y_continuous("Number of beds required",breaks=log2(ybreaks),labels=ylabs,lim=c(log2(100),log2(20000)))
png(paste(today.character,"/",today.character,"_CDC_limits_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
new.dayx <- labeled.data
for(j in names(plotting.models)){
new.dayx[[j]]$place <- j
}
new.dayx <- rbindlist(new.dayx,fill=TRUE)
new.dayx <- new.dayx[new.dayx$label=="Historical" | new.dayx$label=="Projection",]
new.dayx$place <- factor(new.dayx$place)
levels(new.dayx$place) <- c("\nGuinea",
"\nLiberia",
"\nSierra Leone",
"\nTotal")
new.dayx$place <- factor(new.dayx$place,levels=c(
"\nTotal",
"\nSierra Leone",
"\nLiberia",
"\nGuinea"))
ybreaks <- c(100,200,500,1000,2000,5000,10000,20000,40000,100000)
ylabs <- paste(ybreaks/1000,"K",sep="")
xbreaks <- seq(-28*5,28*2,28)
#text <- collapsed[nrow(collapsed),]
new.dayx$cdc25p.ETU.l95[new.dayx$cdc25p.ETU.l95<100] <- 100
new.dayx$cdc45p.reduced.l95[new.dayx$cdc45p.reduced.l95<100] <- 100
q <- ggplot(new.dayx[new.dayx$label=="Historical"|new.dayx$label=="Projection",],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=3,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=3,lwd=2)
q <- q + geom_ribbon(aes(ymin=log2(cdc25p.ETU.l95),ymax=log2(cdc25p.ETU.u95),fill=label),
alpha=0.4)
q <- q + geom_line(aes(y=log2(cdc25p.ETU),col=label,lty="25% in ETC"),lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cdc45p.reduced.l95),ymax=log2(cdc45p.reduced.u95),fill=label),
alpha=0.4)
#q <- q + geom_ribbon(aes(ymin=log2(cdc45p.reduced.l95),ymax=log2(cdc45p.reduced.u95),fill="red"),
#                    alpha=0.4)
q <- q + geom_line(aes(y=log2(cdc45p.reduced),col=label,lty="45% in reduced\ntransmission"),lwd=3)
q <- q + scale_linetype_manual("\nCDC targets",values=c("25% in ETC"=1,"45% in reduced\ntransmission"=2),labels=c("25% in ETC","45% in reduced\ntransmission"))
q <- q + scale_colour_brewer("",palette="Set1")
q <- q + scale_fill_brewer("",palette="Set1")
q <- q + guides(colour = guide_legend(override.aes = list(size=30),reverse=FALSE))
q <- q + guides(linetype = guide_legend(reverse=TRUE))
q <- q + guides(fill=FALSE)
q <- q + facet_wrap(~place,scales="free")
#q <- q + labs(title=paste(proper(j)," estimates of cases needing treatment to reach CDC 70% goals as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks,lim=c(-56,56))
q <- format_plot(q,6,10)
q <- q + scale_y_continuous("",breaks=log2(ybreaks),labels=ylabs,lim=c(log2(100),log2(100000)))
png(paste(today.character,"/",today.character,"_CDC_limits_ALL.png",sep=""),width=3508,height=2480)
print(q)
dev.off()
plotting.models <- labeled.data
for(j in names(new.day)){
if(j!="total"){
print("----------")
print(j)
print(new.day[[j]][1,])
}
to.print <- plotting.models[[j]]
to.print <- to.print[to.print$label=="Historical" | to.print$label=="Projection",]
to.print <- data.frame(to.print[order(-to.print$days.to.today),])
to.print$date <- as.Date(today.character)+to.print$days.to.today
to.print$cases.estimated <- format_est_ci(to.print$cases.estimated, to.print$cases.estimated.l95, to.print$cases.estimated.u95,0)
to.print$cases.reported <- format_est_ci(to.print$cases.reported, to.print$cases.reported.l95, to.print$cases.reported.u95,0)
to.print$new.cases.reported.treated <- format_est_ci(to.print$new.cases.reported, to.print$new.cases.reported.l95, to.print$new.cases.reported.u95,0)
to.print$new.cases.estimated <- format_est_ci(to.print$new.cases.estimated, to.print$new.cases.estimated.l95, to.print$new.cases.estimated.u95,0)
to.print$incubation.estimated <- format_est_ci(to.print$E, to.print$E.l95, to.print$E.u95,0)
to.print$infectious.estimated <- format_est_ci(to.print$I, to.print$I.l95, to.print$I.u95,0)
to.print$currently.treated.estimated <- format_est_ci(to.print$T, to.print$T.l95, to.print$T.u95,0)
to.print$reporting.quotient <- paste(format_sig(to.print$reporting.quotient*100,0),"%",sep="")
to.print$cdc25p.ETU <- format_est_ci(to.print$cdc25p.ETU ,to.print$cdc25p.ETU.l95,to.print$cdc25p.ETU.u95,0)
to.print$cdc45p.reduced <- format_est_ci(to.print$cdc45p.reduced,to.print$cdc45p.reduced.l95,to.print$cdc45p.reduced.u95,0)
to.print <- to.print[,c("date","days.to.today","cases.reported","new.cases.reported.treated","cases.estimated","new.cases.estimated","incubation.estimated","infectious.estimated","currently.treated.estimated",
"cdc25p.ETU","cdc45p.reduced","reporting.quotient")]
for(i in 1:ncol(to.print)) to.print[,i] <- as.character(to.print[,i])
titles <- to.print[1,]
titles$date <- "Date"
titles$days.to.today <- "Days from today"
titles$cases.reported <- "Cases (reported)"
titles$new.cases.reported.treated <- "New daily cases (reported)"
titles$cases.estimated <- "Cases (corrected for underreporting)"
titles$new.cases.estimated <- "New daily cases (corrected for underreporting)"
titles$incubation.estimated <- "Incubation period"
titles$infectious.estimated <- "Infectious and unreported"
titles$currently.treated.estimated <- "Undergoing treatment"
titles$cdc25p.ETU <- "Beds for CDC target of 25% cases in ETC"
titles$cdc45p.reduced <- "Beds for CDC target of 45% cases in reduced transmission"
titles$reporting.quotient <- "Reporting (treatment) quotient"
if(j=="sierra"){
to.save.table <- to.print[to.print$days.to.today==0 | to.print$days.to.today==28 | to.print$days.to.today==56,]
to.save.table <- rbind(titles,to.save.table)
}
titles <- titles[,names(to.print)]
to.print <- rbind(titles,to.print)
write.table(na.omit(to.print),file=paste(today.character,"/",today.character,"_written_estimates_",j,".csv",sep=""),row.names=FALSE,col.names=FALSE,sep=";",qmethod="double")
}
for(j in names(new.day)){
if(j!="total"){
print("----------")
print(j)
print(new.day[[j]][1,])
}
to.print <- labeled.data[[j]]
to.print <- to.print[to.print$label=="Historical" | to.print$label=="Projection",]
to.print <- data.frame(to.print[order(-to.print$days.to.today),])
to.print$date <- as.Date(today.character)+to.print$days.to.today
to.print$need.treatment <- round(to.print$cdc25p.ETU + to.print$cdc45p.reduced)
to.print$need.treatment.sd <- sqrt(to.print$cdc25p.ETU.sd^2 + to.print$cdc45p.reduced.sd^2)
to.print$needed.administrator.coordination <- round(to.print$need.treatment/20000*22)
to.print$needed.administrator.coordination.sd <- to.print$need.treatment.sd/20000*22
to.print$needed.doctor.etu <- round(to.print$need.treatment/20000*45)
to.print$needed.doctor.etu.sd <- to.print$need.treatment.sd/20000*45
to.print$needed.doctor.coordination <- round(to.print$need.treatment/20000*11)
to.print$needed.doctor.coordination.sd <- to.print$need.treatment.sd/20000*11
to.print$needed.epidemiologist.contact.tracing <- round(to.print$need.treatment/20000*25)
to.print$needed.epidemiologist.contact.tracing.sd <- to.print$need.treatment.sd/20000*25
to.print$needed.epidemiologist.coordination <- round(to.print$need.treatment/20000*33)
to.print$needed.epidemiologist.coordination.sd <- to.print$need.treatment.sd/20000*33
to.print$needed.labscientist.labs <- round(to.print$need.treatment/20000*67)
to.print$needed.labscientist.labs.sd <- to.print$need.treatment.sd/20000*67
to.print$needed.logistician.burials <- round(to.print$need.treatment/20000*33)
to.print$needed.logistician.burials.sd <- to.print$need.treatment.sd/20000*33
to.print$needed.logistician.etu <- round(to.print$need.treatment/20000*89)
to.print$needed.logistician.etu.sd <- to.print$need.treatment.sd/20000*89
to.print$needed.logistician.coordination <- round(to.print$need.treatment/20000*33)
to.print$needed.logistician.coordination.sd <- to.print$need.treatment.sd/20000*33
to.print$needed.nurse.etu <- round(to.print$need.treatment/20000*178)
to.print$needed.nurse.etu.sd <- to.print$need.treatment.sd/20000*178
to.print$needed.phs.social <- round(to.print$need.treatment/20000*51)
to.print$needed.phs.social.sd <- to.print$need.treatment.sd/20000*51
to.print$needed.phs.coordination <- round(to.print$need.treatment/20000*22)
to.print$needed.phs.coordination.sd <- to.print$need.treatment.sd/20000*22
to.print$needed.datamanagement.coordination <- round(to.print$need.treatment/20000*28)
to.print$needed.datamanagement.coordination.sd <- to.print$need.treatment.sd/20000*28
to.print$total <- to.print$needed.administrator.coordination+
to.print$needed.doctor.etu+
to.print$needed.doctor.coordination+
to.print$needed.epidemiologist.contact.tracing+
to.print$needed.epidemiologist.coordination+
to.print$needed.labscientist.labs+
to.print$needed.logistician.burials+
to.print$needed.logistician.etu+
to.print$needed.logistician.coordination+
to.print$needed.nurse.etu+
to.print$needed.phs.social+
to.print$needed.phs.coordination+
to.print$needed.datamanagement.coordination
to.print$total.sd <- sqrt(to.print$needed.administrator.coordination.sd^2+
to.print$needed.doctor.etu.sd^2+
to.print$needed.doctor.coordination.sd^2+
to.print$needed.epidemiologist.contact.tracing.sd^2+
to.print$needed.epidemiologist.coordination.sd^2+
to.print$needed.labscientist.labs.sd^2+
to.print$needed.logistician.burials.sd^2+
to.print$needed.logistician.etu.sd^2+
to.print$needed.logistician.coordination.sd^2+
to.print$needed.nurse.etu.sd^2+
to.print$needed.phs.social.sd^2+
to.print$needed.phs.coordination.sd^2+
to.print$needed.datamanagement.coordination.sd^2)
to.print$need.treatment <- format_est_sd_ci(to.print$need.treatment, to.print$need.treatment.sd,0)
to.print$needed.administrator.coordination <- format_est_sd_ci(to.print$needed.administrator.coordination, to.print$needed.administrator.coordination.sd,0)
to.print$needed.doctor.etu <- format_est_sd_ci(to.print$needed.doctor.etu, to.print$needed.doctor.etu.sd,0)
to.print$needed.doctor.coordination <- format_est_sd_ci(to.print$needed.doctor.coordination, to.print$needed.doctor.coordination.sd,0)
to.print$needed.epidemiologist.contact.tracing <- format_est_sd_ci(to.print$needed.epidemiologist.contact.tracing, to.print$needed.epidemiologist.contact.tracing.sd,0)
to.print$needed.epidemiologist.coordination <- format_est_sd_ci(to.print$needed.epidemiologist.coordination, to.print$needed.epidemiologist.coordination.sd,0)
to.print$needed.labscientist.labs <- format_est_sd_ci(to.print$needed.labscientist.labs, to.print$needed.labscientist.labs.sd,0)
to.print$needed.logistician.burials <- format_est_sd_ci(to.print$needed.logistician.burials, to.print$needed.logistician.burials.sd,0)
to.print$needed.logistician.etu <- format_est_sd_ci(to.print$needed.logistician.etu, to.print$needed.logistician.etu.sd,0)
to.print$needed.logistician.coordination <- format_est_sd_ci(to.print$needed.logistician.coordination, to.print$needed.logistician.coordination.sd,0)
to.print$needed.nurse.etu <- format_est_sd_ci(to.print$needed.nurse.etu, to.print$needed.nurse.etu.sd,0)
to.print$needed.phs.social <- format_est_sd_ci(to.print$needed.phs.social, to.print$needed.phs.social.sd,0)
to.print$needed.phs.coordination <- format_est_sd_ci(to.print$needed.phs.coordination, to.print$needed.phs.coordination.sd,0)
to.print$needed.datamanagement.coordination <- format_est_sd_ci(to.print$needed.datamanagement.coordination, to.print$needed.datamanagement.coordination.sd,0)
to.print$total <- format_est_sd_ci(to.print$total, to.print$total.sd,0)
to.print <- to.print[,c("date","days.to.today",
"need.treatment","needed.administrator.coordination","needed.doctor.etu","needed.doctor.coordination",
"needed.epidemiologist.contact.tracing","needed.epidemiologist.coordination","needed.labscientist.labs",
"needed.logistician.burials","needed.logistician.etu","needed.logistician.coordination",
"needed.nurse.etu","needed.phs.social","needed.phs.coordination","needed.datamanagement.coordination",
"total")]
for(i in 1:ncol(to.print)) to.print[,i] <- as.character(to.print[,i])
titles <- to.print[1,]
titles$date <- "Date"
titles$days.to.today <- "Days from today"
titles$need.treatment <- "Caseload"
titles$needed.administrator.coordination <- "Administrator (coordination)"
titles$needed.doctor.etu <- "Doctor (ETU)"
titles$needed.doctor.coordination <- "Doctor (coordination)"
titles$needed.epidemiologist.contact.tracing <- "Epidemiologist (contact tracing)"
titles$needed.epidemiologist.coordination <- "Epidemiologist (coordination)"
titles$needed.labscientist.labs <- "Lab scientist (laboratories)"
titles$needed.logistician.burials <- "Logistician (burials)"
titles$needed.logistician.etu <- "Logistician (ETU)"
titles$needed.logistician.coordination <- "Logistician (coordination)"
titles$needed.nurse.etu <- "Nurse (ETU)"
titles$needed.phs.social <- "Public health specialist (Social mobilization)"
titles$needed.phs.coordination <- "Public health specialist (coordination)"
titles$needed.datamanagement.coordination <- "Data management (coordination)"
titles$total <- "Total personnel"
to.save.table.persons <- to.print[to.print$days.to.today==0 | to.print$days.to.today==28 | to.print$days.to.today==56,]
to.save.table.persons <- rbind(titles,to.save.table.persons)
saveRDS(to.save.table.persons,file=paste("table_persons_",j,".RDS",sep=""))
titles <- titles[,names(to.print)]
to.print <- rbind(titles,to.print)
write.table(na.omit(to.print),file=paste(today.character,"/",today.character,"_persons_estimates_",j,".csv",sep=""),row.names=FALSE,col.names=FALSE,sep=";",qmethod="double")
}
for(j in names(new.day)){
if(j!="total"){
print("----------")
print(j)
print(new.day[[j]][1,])
}
to.print <- labeled.data[[j]]
to.print <- to.print[to.print$label=="Historical" | to.print$label=="Projection",]
to.print <- data.frame(to.print[order(-to.print$days.to.today),])
to.print$date <- as.Date(today.character)+to.print$days.to.today
to.print$cdc25p.ETU <- round(to.print$cdc25p.ETU)
to.print$nurses.paramedics <- round(to.print$cdc25p.ETU/100*50)
to.print$nurses.paramedics.sd <- to.print$cdc25p.ETU.sd/100*50
to.print$hygienists <- round(to.print$cdc25p.ETU/100*50)
to.print$hygienists.sd <- to.print$cdc25p.ETU.sd/100*50
to.print$doctors <- round(to.print$cdc25p.ETU/100*10)
to.print$doctors.sd <- to.print$cdc25p.ETU.sd/100*10
to.print$support <- round(to.print$cdc25p.ETU)
to.print$support.sd <- to.print$cdc25p.ETU.sd
to.print$total <- to.print$nurses.paramedics+
to.print$hygienists+
to.print$doctors+
to.print$support
to.print$total.sd <- sqrt(to.print$nurses.paramedics.sd^2+
to.print$hygienists.sd^2+
to.print$doctors.sd^2+
to.print$support.sd^2)
to.print$cdc25p.ETU <- format_est_sd_ci(to.print$cdc25p.ETU, to.print$cdc25p.ETU.sd,0)
to.print$nurses.paramedics <- format_est_sd_ci(to.print$nurses.paramedics, to.print$nurses.paramedics.sd,0)
to.print$hygienists <- format_est_sd_ci(to.print$hygienists, to.print$hygienists.sd,0)
to.print$doctors <- format_est_sd_ci(to.print$doctors, to.print$doctors.sd,0)
to.print$support <- format_est_sd_ci(to.print$support, to.print$support.sd,0)
to.print$total <- format_est_sd_ci(to.print$total, to.print$total.sd,0)
to.print <- to.print[,c("date","days.to.today",
"cdc25p.ETU","nurses.paramedics","hygienists","doctors",
"support","total")]
for(i in 1:ncol(to.print)) to.print[,i] <- as.character(to.print[,i])
titles <- to.print[1,]
titles$date <- "Date"
titles$days.to.today <- "Days from today"
titles$cdc25p.ETU <- "ETU caseload"
titles$nurses.paramedics <- "Nurses and paramedics"
titles$hygienists <- "Hygienists and nurses aids"
titles$doctors <- "Doctors"
titles$support <- "Support staff"
titles$total <- "Total"
to.save.table.etu <- to.print[to.print$days.to.today==0 | to.print$days.to.today==28 | to.print$days.to.today==56,]
to.save.table.etu <- rbind(titles, to.save.table.etu)
saveRDS(to.save.table.etu,file=paste("table_etu_",j,".RDS",sep=""))
titles <- titles[,names(to.print)]
to.print <- rbind(titles,to.print)
write.table(na.omit(to.print),file=paste(today.character,"/",today.character,"_etu_estimates_",j,".csv",sep=""),row.names=FALSE,col.names=FALSE,sep=";",qmethod="double")
}
for(j in names(new.day)){
if(j!="total"){
print("----------")
print(j)
print(new.day[[j]][1,])
}
to.print <- labeled.data[[j]]
to.print <- to.print[to.print$label=="Historical" | to.print$label=="Projection",]
to.print <- data.frame(to.print[order(-to.print$days.to.today),])
to.print$date <- as.Date(today.character)+to.print$days.to.today
to.print$need.treatment <- round(to.print$cdc25p.ETU + to.print$cdc45p.reduced)
to.print$need.treatment.sd <- sqrt(to.print$cdc25p.ETU.sd^2 + to.print$cdc45p.reduced.sd^2)
to.print$needed.ppe.m3 <- to.print$need.treatment/20000*14893/(365.25/12)
to.print$needed.ppe.m3.sd <- to.print$need.treatment.sd/20000*14893/(365.25/12)
to.print$needed.ppe.m3 <- format_est_sd_ci(to.print$needed.ppe.m3, to.print$needed.ppe.m3.sd,1)
to.print$needed.ppe.tons <- to.print$need.treatment/20000*3095/(365.25/12)
to.print$needed.ppe.tons.sd <- to.print$need.treatment.sd/20000*3095/(365.25/12)
to.print$needed.ppe.tons <- format_est_sd_ci(to.print$needed.ppe.tons, to.print$needed.ppe.tons.sd,1)
to.print$needed.bodybag.m3 <- to.print$need.treatment/20000*40/(365.25/12)
to.print$needed.bodybag.m3.sd <- to.print$need.treatment.sd/20000*40/(365.25/12)
to.print$needed.bodybag.m3 <- format_est_sd_ci(to.print$needed.bodybag.m3, to.print$needed.bodybag.m3.sd,1)
to.print$needed.bodybag.tons <- to.print$need.treatment/20000*4/(365.25/12)
to.print$needed.bodybag.tons.sd <- to.print$need.treatment.sd/20000*4/(365.25/12)
to.print$needed.bodybag.tons <- format_est_sd_ci(to.print$needed.bodybag.tons, to.print$needed.bodybag.tons.sd,1)
to.print$needed.chlorine.m3 <- to.print$need.treatment/20000*16/(365.25/12)
to.print$needed.chlorine.m3.sd <- to.print$need.treatment.sd/20000*16/(365.25/12)
to.print$needed.chlorine.m3 <- format_est_sd_ci(to.print$needed.chlorine.m3, to.print$needed.chlorine.m3.sd,1)
to.print$needed.chlorine.tons <- to.print$need.treatment/20000*16/(365.25/12)
to.print$needed.chlorine.tons.sd <- to.print$need.treatment.sd/20000*16/(365.25/12)
to.print$needed.chlorine.tons <- format_est_sd_ci(to.print$needed.chlorine.tons, to.print$needed.chlorine.tons.sd,1)
to.print$needed.medsup.m3 <- to.print$need.treatment/20000*230/(365.25/12)
to.print$needed.medsup.m3.sd <- to.print$need.treatment.sd/20000*230/(365.25/12)
to.print$needed.medsup.m3 <- format_est_sd_ci(to.print$needed.medsup.m3, to.print$needed.medsup.m3.sd,1)
to.print$needed.medsup.tons <- to.print$need.treatment/20000*115/(365.25/12)
to.print$needed.medsup.tons.sd <- to.print$need.treatment.sd/20000*115/(365.25/12)
to.print$needed.medsup.tons <- format_est_sd_ci(to.print$needed.medsup.tons, to.print$needed.medsup.tons.sd,1)
to.print$needed.labsup.m3 <- to.print$need.treatment/20000*25/(365.25/12)
to.print$needed.labsup.m3.sd <- to.print$need.treatment.sd/20000*25/(365.25/12)
to.print$needed.labsup.m3 <- format_est_sd_ci(to.print$needed.labsup.m3, to.print$needed.labsup.m3.sd,1)
to.print$needed.labsup.tons <- to.print$need.treatment/20000*12/(365.25/12)
to.print$needed.labsup.tons.sd <- to.print$need.treatment.sd/20000*12/(365.25/12)
to.print$needed.labsup.tons <- format_est_sd_ci(to.print$needed.labsup.tons, to.print$needed.labsup.tons.sd,1)
to.print$needed.total.m3 <- to.print$need.treatment/20000*15204/(365.25/12)
to.print$needed.total.m3.sd <- to.print$need.treatment.sd/20000*15204/(365.25/12)
to.print$needed.total.m3 <- format_est_sd_ci(to.print$needed.total.m3, to.print$needed.total.m3.sd,1)
to.print$needed.total.tons <- to.print$need.treatment/20000*3242/(365.25/12)
to.print$needed.total.tons.sd <- to.print$need.treatment.sd/20000*3242/(365.25/12)
to.print$needed.total.tons <- format_est_sd_ci(to.print$needed.total.tons, to.print$needed.total.tons.sd,1)
to.print <- to.print[,c("date","days.to.today",
"needed.ppe.m3","needed.ppe.tons","needed.bodybag.m3","needed.bodybag.tons",
"needed.chlorine.m3","needed.chlorine.tons","needed.medsup.m3",
"needed.medsup.tons","needed.labsup.m3","needed.labsup.tons",
"needed.total.m3","needed.total.tons")]
for(i in 1:ncol(to.print)) to.print[,i] <- as.character(to.print[,i])
titles <- to.print[1,]
titles$date <- "Date"
titles$days.to.today <- "Days from today"
titles$need.treatment <- "Caseload"
titles$needed.ppe.m3 <- "PPE (m3)"
titles$needed.ppe.tons <- "PPE (tons)"
titles$needed.bodybag.m3 <- "Body bags (m3)"
titles$needed.bodybag.tons <- "Body bags (tons)"
titles$needed.chlorine.m3 <- "Chlorine (m3)"
titles$needed.chlorine.tons <- "Chlorine (tons)"
titles$needed.medsup.m3 <- "Medical supplies (m3)"
titles$needed.medsup.tons <- "Medical supplies (tons)"
titles$needed.labsup.m3 <- "Lab supplies (m3)"
titles$needed.labsup.tons <- "Lab supplies (tons)"
titles$needed.total.m3 <- "Total (m3)"
titles$needed.total.tons <- "Total (tons)"
titles <- titles[,names(to.print)]
if(j=="total"){
to.save.table.supplies <- to.print[to.print$days.to.today==0 | to.print$days.to.today==28 | to.print$days.to.today==56,]
to.save.table.supplies <- rbind(titles,to.save.table.supplies)
}
titles <- titles[,names(to.print)]
to.print <- rbind(titles,to.print)
write.table(na.omit(to.print),file=paste(today.character,"/",today.character,"_supplies_estimates_",j,".csv",sep=""),row.names=FALSE,col.names=FALSE,sep=";",qmethod="double")
}
to.save <- labeled.data
for(j in names(labeled.data)){
to.save[[j]]$date <- as.Date(today.character)+to.save[[j]]$days.to.today
}
saveRDS(to.save,file="raw_estimates.RDS")
saveRDS(to.save.table,file="table.RDS")
saveRDS(to.save.table.supplies,file="table_supplies.RDS")
#####
clean_table <- function(x){
x <- x[-1,]
for(i in 3:ncol(x)) for(j in 1:nrow(x)){
x[j,i] <- str_extract(x[j,i],"^[ 0-9]*")
x[j,i] <- gsub(" ","",x[j,i])
}
for(i in 2:ncol(x)) x[,i] <- as.numeric(as.character(x[,i]))
return(x)
}
barplot <- list()
for(j in names(labeled.data)){
x <- readRDS(paste("table_persons_",j,".RDS",sep=""))
x <- clean_table(x)
x$place <- j
barplot[[j]] <- x
}
barplot <- rbindlist(barplot)
barplot <- melt(barplot,id=c("date","days.to.today","place"))
levels(barplot$variable) <- c("Need treatment",
"Admin",
"Doctor",
"Doctor",
"Epidem",
"Epidem",
"Lab",
"Logistician",
"Logistician",
"Logistician",
"Nurse",
"PHS",
"PHS",
"Data",
"Total")
barplot <- barplot[barplot$variable!="Need treatment" & barplot$variable!="Total",]
barplot[1,]
barplot <- data.table(barplot)
barplot <- barplot[,
list(value=sum(value)),
by=list(date,days.to.today,place,variable)]
sorting.data <- barplot[barplot$days.to.today==56 & barplot$place=="total",]
ordering <- sorting.data$variable[order(-sorting.data$value)]
barplot$variable <- factor(barplot$variable,levels=ordering)
barplot$place <- factor(barplot$place)
levels(barplot$place) <- c("Guinea",
"Liberia",
"Sierra Leone",
"Total")
barplot$place <- factor(barplot$place,levels=c(
"Total",
"Sierra Leone",
"Liberia",
"Guinea"))
barplot=data.table(barplot,key=c("variable","place"))
barplot <- barplot[barplot$place!="Total",]
barplot$date <- paste("International staff needed on ",barplot$date,sep="")
q <- ggplot(barplot[barplot$place=="Sierra Leone",],aes(x=variable,y=value))
q <- q + geom_bar(stat="identity",width=0.5,alpha=0.7)
q <- q + facet_wrap(~date,scales="free",ncol=1)
q <- q + scale_fill_brewer("",palette="Set1")
q <- q + scale_x_discrete("")
q <- q + scale_y_continuous("",lim=c(0,101))
q <- q + guides(fill = guide_legend(reverse = TRUE))
q <- format_plot(q,6,10,xangle=-45,stripes=TRUE)
png(paste(today.character,"/",today.character,"_staff_international.png",sep=""),width=2480,height=3508)
print(q)
dev.off()
barplot <- list()
for(j in names(labeled.data)){
x <- readRDS(paste("table_etu_",j,".RDS",sep=""))
x <- clean_table(x)
x$place <- j
barplot[[j]] <- x
}
barplot <- rbindlist(barplot)
barplot <- melt(barplot,id=c("date","days.to.today","place"))
levels(barplot$variable) <- c("Need treatment",
"Nurse/Paramed",
"Hygienist",
"Doctor",
"Support",
"Total")
barplot <- barplot[barplot$variable!="Need treatment" & barplot$variable!="Total",]
barplot[1,]
barplot <- data.table(barplot)
barplot <- barplot[,
list(value=sum(value)),
by=list(date,days.to.today,place,variable)]
sorting.data <- barplot[barplot$days.to.today==56 & barplot$place=="total",]
ordering <- sorting.data$variable[order(-sorting.data$value)]
barplot$variable <- factor(barplot$variable,levels=ordering)
barplot$place <- factor(barplot$place)
levels(barplot$place) <- c(
"\nETU staff needed in Guinea",
"\nETU staff needed in Liberia",
"\nETU staff needed in Sierra Leone",
"\nETU staff needed in total")
barplot$place <- factor(barplot$place,levels=c("\nETU staff needed in total","\nETU staff needed in Guinea","\nETU staff needed in Liberia","\nETU staff needed in Sierra Leone"))
barplot=data.table(barplot,key=c("variable","place"))
q <- ggplot(barplot[barplot$place=="\nETU staff needed in Sierra Leone",],aes(x= date,y=value,fill=variable))
q <- q + geom_bar(stat="identity",width=0.5,alpha=0.7)
#q <- q + facet_wrap(~place,scales="free")
q <- q + scale_fill_brewer("",palette="Set1")
q <- q + scale_x_discrete("")
q <- q + scale_y_continuous("")
q <- q+ labs(title="")
q <- q + guides(fill = guide_legend(reverse = TRUE))
q <- format_plot(q,6,10,stripes=TRUE)
png(paste(today.character,"/",today.character,"_staff_ETU.png",sep=""),width=3508,height=2480)
print(q)
dev.off()
rmarkdown::render("test.Rmd","word_document")
f <- paste(today.character,"/",today.character,"_ebola_model.docx",sep="")
try(file.remove(f),TRUE)
file.rename(from ="test.docx",  to =f)
rmarkdown::render("test.Rmd","word_document")
f <- paste(today.character,"/",today.character,"_ebola_model.docx",sep="")
try(file.remove(f),TRUE)
file.rename(from ="test.docx",  to =f)
rmarkdown::render("test.Rmd","word_document")
f <- paste(today.character,"/",today.character,"_ebola_model.docx",sep="")
try(file.remove(f),TRUE)
file.rename(from ="test.docx",  to =f)
rmarkdown::render("test.Rmd","word_document")
f <- paste(today.character,"/",today.character,"_ebola_model.docx",sep="")
try(file.remove(f),TRUE)
file.rename(from ="test.docx",  to =f)

collapsed.final.opts <- calc.prob(params)
collapsed.final.opts <- collapsed.final.opts[,dif:=NULL]
params <- rbindlist(params)
params <- merge(params,collapsed.final.opts,by=c("index"))
params$est.end <- params$I_end+params$R_end+params$D_end
results <- "a"
old <- current <- params[1,]
for(i in 1:nrow(params)){
old <- current
current <- params[i,]
reported.end <- old$reported.end
if(i==1) reported.end<-0
new.run <- FALSE
if(old$index!=current$index){
sirmodel <- SEIR(old$d.end,old$d.end+days.to.today+2*28,
R0=old$R0,
time.incubation=time.incubation,
time.infectedL=time.infectedL,
time.infectedD=time.infectedD,
cfr=cfr,
E_0=old$E_end,
I_0=old$I_end,
R_0=old$R_end,
D_0=old$D_end,mod,reported.end)
sirmodel <- sirmodel[-1,]
sirmodel$p <- old$p
sirmodel$index <- old$index
sirmodel$R0 <- old$R0
results <- rbind(results,sirmodel)
reported.end <- 0
start <- start+1
new.run <- TRUE
}
sirmodel <- SEIR(current$d.start,current$d.end,
R0=current$R0,
time.incubation=time.incubation,
time.infectedL=time.infectedL,
time.infectedD=time.infectedD,
cfr=cfr,
E_0=current$E_0,
I_0=current$I_0,
R_0=current$R_0,
D_0=current$D_0,mod,reported.end)
if(!new.run & i!=1) sirmodel <- sirmodel[-1,]
sirmodel$p <- current$p
sirmodel$index <- current$index
sirmodel$R0 <- current$R0
if(is.character(results)){
results <- sirmodel
} else results <- rbind(results,sirmodel)
}
results <- data.table(results)
results.p <- results[,list(p=sum(p)),by=list(time)]
setnames(results.p,c("time","pdenominator"))
adj.results <- merge(results,results.p,by="time")
adj.results$adjp <- adj.results$p/adj.results$pdenominator
collapsed <- adj.results[,
list(R0=sum(R0*adjp),
R02=sum(R0^2*adjp),
cases.estimated=sum(cases.estimated*adjp),
cases.estimated2=sum(cases.estimated^2*adjp),
cases.reported=sum(cases.reported*adjp),
cases.reported2=sum(cases.reported^2*adjp)),
by=list(time)]
collapsed$R0.sd <- sqrt(collapsed$R02-collapsed$R0^2)
collapsed$cases.estimated.sd <- sqrt(collapsed$cases.estimated2-collapsed$cases.estimated^2)
collapsed$cases.reported.sd <- sqrt(collapsed$cases.reported2-collapsed$cases.reported^2)
collapsed <- collapsed[,R02:=NULL]
collapsed <- collapsed[,cases.estimated2:=NULL]
setnames(collapsed,1,"day")
collapsed$cases.estimated.l95 <- collapsed$cases.estimated-1.96*collapsed$cases.estimated.sd
collapsed$cases.estimated.u95 <- collapsed$cases.estimated+1.96*collapsed$cases.estimated.sd
collapsed$cases.reported.l95 <- collapsed$cases.reported-1.96*collapsed$cases.reported.sd
collapsed$cases.reported.u95 <- collapsed$cases.reported+1.96*collapsed$cases.reported.sd
collapsed$R0.l95 <- collapsed$R0-1.96*collapsed$R0.sd
collapsed$R0.u95 <- collapsed$R0+1.96*collapsed$R0.sd
collapsed$days.to.today <- collapsed$day-max(days)-days.to.today
collapsed$date <- today+collapsed$days.to.today
collapsed <- merge(collapsed,data[,c("day","cases.observed")],by="day",all=TRUE)
return(collapsed)
}
data <- read.csv("data.csv",header=TRUE,sep=";")
data.models <- list()
data.models[["liberia"]] <- data[,c("Underreporting","Date","LiberiaCases")]
data.models[["sierra"]] <- data[,c("Underreporting","Date","SierraCases")]
data.models[["guinea"]] <- data[,c("Underreporting","Date","GuineaCases")]
opts.R0 <- seq(0.8,2.4,0.1)
opts.E_0 <- seq(2,82,10)#c(seq(2,20,4),seq(30,200,20))
opts.I_0 <- seq(2,82,10)#c(seq(2,20,4),seq(30,200,20))
results.models <- list()
for(i in names(data.models)){
results.models[[i]] <- modelSEIR(data.models[[i]],opts.R0,opts.E_0,opts.I_0)
}
try(results.models[["total"]]<-NULL,TRUE)
aggregated <- rbindlist(results.models)
aggregated <- aggregated[!is.na(aggregated$days.to.today),]
aggregated <- aggregated[,
list(
cases.estimated=sum(cases.estimated),
cases.estimated.sd=sum(cases.estimated.sd^2),
cases.reported=sum(cases.reported),
cases.reported.sd=sum(cases.reported.sd^2),
cases.observed=sum(cases.observed)),
by=list(days.to.today)]
aggregated$cases.estimated.sd <- sqrt(aggregated$cases.estimated.sd)
aggregated$cases.estimated.l95 <- aggregated$cases.estimated-1.96*aggregated$cases.estimated.sd
aggregated$cases.estimated.u95 <- aggregated$cases.estimated+1.96*aggregated$cases.estimated.sd
aggregated$cases.reported.sd <- sqrt(aggregated$cases.reported.sd)
aggregated$cases.reported.l95 <- aggregated$cases.reported-1.96*aggregated$cases.reported.sd
aggregated$cases.reported.u95 <- aggregated$cases.reported+1.96*aggregated$cases.reported.sd
results.models[["total"]] <- aggregated
#q <- ggplot(mapping=aes(x=day))
#q <- q + geom_line(data=collapsed,aes(y=R0),col="red")
#q
for(j in names(results.models)){
ybreaks <- c(50,100,1000,5000,10000,20000,40000,80000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_point(aes(y=log2(cases.observed)),size=10)
q <- q + geom_ribbon(aes(ymin=log2(cases.reported.l95),ymax=log2(cases.reported.u95)),
fill="blue",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.reported)),col="blue",lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cases.estimated.l95),ymax=log2(cases.estimated.u95)),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.estimated)),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_log_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
ybreaks <- c(50,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=cases.estimated.l95,ymax=cases.estimated.u95),
fill="red",alpha=0.4)
q <- q + geom_point(aes(y=cases.observed),size=10)
q <- q + geom_line(aes(y=cases.estimated),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
if(j=="total") next
ybreaks <- seq(0.25,2,0.25)
xbreaks <- seq(-28*6,28*2,28)
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=R0.l95,ymax=R0.u95),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=R0),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_R0_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(50,100,200,1000,5000,10000,20000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
for(j in names(results.models)){
ybreaks <- c(50,100,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_point(aes(y=log2(cases.observed)),size=10)
q <- q + geom_ribbon(aes(ymin=log2(cases.reported.l95),ymax=log2(cases.reported.u95)),
fill="blue",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.reported)),col="blue",lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cases.estimated.l95),ymax=log2(cases.estimated.u95)),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.estimated)),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_log_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
ybreaks <- c(50,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=cases.estimated.l95,ymax=cases.estimated.u95),
fill="red",alpha=0.4)
q <- q + geom_point(aes(y=cases.observed),size=10)
q <- q + geom_line(aes(y=cases.estimated),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
if(j=="total") next
ybreaks <- seq(0.25,2,0.25)
xbreaks <- seq(-28*6,28*2,28)
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=R0.l95,ymax=R0.u95),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=R0),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_R0_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(50,100,200,1000,5000,10000,20000,40000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
results.models
for(i in names(results.models)){
results.models[[i]] <- results.models[[i]][-1:28,]
}
#q <- ggplot(mapping=aes(x=day))
#q <- q + geom_line(data=collapsed,aes(y=R0),col="red")
#q
for(j in names(results.models)){
ybreaks <- c(50,100,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_point(aes(y=log2(cases.observed)),size=10)
q <- q + geom_ribbon(aes(ymin=log2(cases.reported.l95),ymax=log2(cases.reported.u95)),
fill="blue",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.reported)),col="blue",lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cases.estimated.l95),ymax=log2(cases.estimated.u95)),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.estimated)),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_log_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
results.models[[i]][-1:28,]
i <- "total"
results.models[[i]]
results.models[[i]][-1:28,]
results.models[[i]][-(1:28),]
for(i in names(results.models)){
results.models[[i]] <- results.models[[i]][-(1:28),]
}
#q <- ggplot(mapping=aes(x=day))
#q <- q + geom_line(data=collapsed,aes(y=R0),col="red")
#q
for(j in names(results.models)){
ybreaks <- c(50,100,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_point(aes(y=log2(cases.observed)),size=10)
q <- q + geom_ribbon(aes(ymin=log2(cases.reported.l95),ymax=log2(cases.reported.u95)),
fill="blue",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.reported)),col="blue",lwd=3)
q <- q + geom_ribbon(aes(ymin=log2(cases.estimated.l95),ymax=log2(cases.estimated.u95)),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=log2(cases.estimated)),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_log_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
ybreaks <- c(50,1000,5000,10000,20000,40000,80000,160000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=cases.estimated.l95,ymax=cases.estimated.u95),
fill="red",alpha=0.4)
q <- q + geom_point(aes(y=cases.observed),size=10)
q <- q + geom_line(aes(y=cases.estimated),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(results.models)){
if(j=="total") next
ybreaks <- seq(0.25,2,0.25)
xbreaks <- seq(-28*6,28*2,28)
q <- ggplot(results.models[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=i,lty=2,lwd=2)
q <- q + geom_ribbon(aes(ymin=R0.l95,ymax=R0.u95),
fill="red",alpha=0.4)
q <- q + geom_line(aes(y=R0),col="red",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("Cases\n",breaks=ybreaks,labels=ybreaks)
png(paste(today.character,"/",today.character,"_R0_estimates_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(50,100,200,1000,5000,10000,20000,40000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
new.day <- results.models
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
[[j]]
new.day[[j]]
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
new.day[[j]]
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.reported[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(50,100,200,1000,5000,10000,20000,40000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.reported[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(5,10,25,50,100,200,1000,5000,10000,20000,40000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
new.day <- results.models
for(j in names(new.day)){
new.day[[j]]$new.cases.estimated <- new.day[[j]]$cases.estimated
new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.estimated[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.estimated[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.estimated[1] <- NA
new.day[[j]]$new.cases.reported <- new.day[[j]]$cases.reported
new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])] <- new.day[[j]]$new.cases.reported[2:nrow(new.day[[j]])]-new.day[[j]]$new.cases.reported[1:(nrow(new.day[[j]])-1)]
new.day[[j]]$new.cases.reported[1] <- NA
ybreaks <- c(5,10,25,50,100,200,500,1000,2000,5000,10000,20000,40000)
xbreaks <- seq(-28*3,28*2,28)
#text <- collapsed[nrow(collapsed),]
q <- ggplot(new.day[[j]],aes(x=days.to.today))
for(i in ybreaks) q <- q + geom_hline(yintercept=log2(i),lty=2,lwd=2)
for(i in xbreaks) q <- q + geom_vline(xintercept=i,lty=2,lwd=2)
q <- q + geom_line(aes(y=log2(new.cases.reported)),col="red",lwd=3)
q <- q + geom_line(aes(y=log2(new.cases.estimated)),col="blue",lwd=3)
q <- q + labs(title=paste(proper(j)," estimates as of ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),"\n",sep=""))
q <- q + scale_x_continuous(paste("\nDays from ",as.character(as.Date(format(Sys.time(), "%Y-%m-%d"))),sep=""),breaks=xbreaks)
q <- format_plot(q,6,6)
q <- q + scale_y_continuous("New daily cases\n",breaks=log2(ybreaks),labels=ybreaks)
png(paste(today.character,"/",today.character,"_new_cases_",j,".png",sep=""),width=3508,height=2480)
print(q)
dev.off()
}
for(j in names(new.day)){
to.print <- new.day[[j]]
to.print <- to.print[order(to.print$days.to.today),]
write.csv(to.print,file=paste(today.character,"/written_estimates_",today.character,"_",j,".csv",sep=""),row.names=FALSE)
}
